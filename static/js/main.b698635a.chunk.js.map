{"version":3,"sources":["components/Header.js","components/Watched.js","components/Watchlist.js","context/AppReducer.js","context/GlobalState.js","components/ResultCard.js","components/Add.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","Watched","Watchlist","state","action","type","watchlist","payload","initialState","watched","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","Provider","value","addMovieToWatchList","movie","children","ResultCard","useContext","watchlistDisabled","find","o","id","poster_path","src","alt","title","release_date","substring","disabled","onClick","Add","useState","query","setQuery","results","setResults","placeholder","onChange","e","preventDefault","target","fetch","process","then","res","json","data","errors","length","map","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b698635a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//rafc\nexport const Header = () => {\n  return (\n    <div>\n      <header>\n        <div className=\"container\">\n          <div className=\"inner-content\">\n            <div className=\"brand\">\n              <Link to=\"/\">Watch List</Link>\n            </div>\n            <ul className=\"nav-links\">\n              <li>\n                <Link to=\"/\">Watch List</Link>\n              </li>\n\n              <li>\n                <Link to=\"/watched\">Watched</Link>\n              </li>\n\n              <li>\n                <Link to=\"/add\" className=\"button\">\n                  Add\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n};\n","import React from 'react'\n\n//rafc\nexport const Watched = () => {\n    return (\n        <div>\n            <h1>Watched page</h1>\n        </div>\n    )\n}\n","import React from 'react'\n\n//rafc\nexport const Watchlist = () => {\n    return (\n        <div>\n            <h1>Watchlist page</h1>\n        </div>\n    )\n}\n","export default (state, action) => {\n  switch (action.type) {\n    case \"ADD_MOVIE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: [action.payload, ...state.watchlist],\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// initial state\nconst initialState = {\n  watchlist: [],\n  watched: [],\n};\n\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider component\nexport const GlobalProvider = (props) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // actions\n  const addMovieToWatchList = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        watchlist: state.watchlist,\n        watched: state.watched,\n        // addMovieToWatchlist: addMovieToWatchlist,\n        addMovieToWatchList,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const ResultCard = ({ movie }) => {\n  \n  const { addMovieToWatchList, watchlist } = useContext(GlobalContext);\n\n  // prevent from adding same movie to watchlist more than once\n  let storedMovie = watchlist.find((o) => o.id === movie.id);\n  const watchlistDisabled = storedMovie ? true : false;\n\n  return (\n    <div className=\"result-card\">\n      <div className=\"poster-wrapper\">\n        {movie.poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n            alt={`${movie.title} Poster`}\n          />\n        ) : (\n          <div className=\"filter-poster\"></div>\n        )}\n      </div>\n\n      <div className=\"info\">\n        <div className=\"header\">\n          <h3 className=\"title\">{movie.title}</h3>\n          <h4 className=\"releaseDate\">\n            {movie.release_date ? movie.release_date.substring(0, 4) : \"-\"}\n          </h4>\n        </div>\n \n        <div className=\"controls\">\n          <button\n            className=\"btn\"\n            disabled={watchlistDisabled}\n            onClick={() => addMovieToWatchList(movie)}\n          >\n            Add to Watchlist\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ResultCard } from \"./ResultCard\";\n\n//rafc\nexport const Add = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const onChange = (e) => {\n    e.preventDefault();\n\n    setQuery(e.target.value);\n\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${e.target.value}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.errors) {\n          setResults(data.results);\n        } else {\n          setResults([]);\n        }\n      });\n  };\n\n  return (\n    <div className=\"add-page\">\n      <div className=\"container\">\n        <div className=\"add-content\">\n          <div className=\"input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search for a movie\"\n              value={query}\n              onChange={onChange}\n            />\n          </div>\n\n          {results.length > 0 && (\n            <ul className=\"results\">\n              {results.map((movie) => (\n                <li key={movie.id}>\n                  <ResultCard movie={movie} />\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Watched } from \"./components/Watched\";\nimport { Watchlist } from \"./components/Watchlist\";\nimport { Add } from \"./components/Add\";\n// import { BiTrash, BiEdit } from \"react-icons/bi\";\n\nimport \"./App.css\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Header />\n\n        <Switch>\n          <Router exact path=\"/\">\n            <Watchlist />\n          </Router>\n\n          <Router path=\"/watched\">\n            <Watched />\n          </Router>\n\n          <Router path=\"/add\">\n            <Add />\n          </Router>\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}